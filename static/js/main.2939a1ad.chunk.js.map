{"version":3,"sources":["redux/types.js","redux/actions.js","components/FormSearch.js","components/Home.js","components/DictionaryItem.js","components/Loader.js","components/Dictionary.js","App.js","reportWebVitals.js","redux/appReducer.js","redux/dictionaryReducer.js","redux/rootReducer.js","index.js"],"names":["SHOW_LOADER","HIDE_LOADER","SHOW_ALERT","HIDE_ALERT","FETCH_DICTIONARY","SET_QUERY","hideLoader","type","fetchDictionary","query","dispatch","a","fetch","response","json","payload","console","error","input","useRef","history","useHistory","useDispatch","useEffect","current","focus","className","onSubmit","event","preventDefault","value","trim","setQuery","push","ref","placeholder","required","id","href","DictionaryItem","dictionary","meanings","word","phonetics","meaningsList","length","map","meaning","i","partOfSpeech","definitions","definition","example","phoneticsList","phonetic","audioURL","audio","Audio","onClick","play","text","Loader","role","slug","useParams","loading","useSelector","state","app","fetchedDictionary","message","Array","isArray","res","App","to","FormSearch","exact","path","Home","Dictionary","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","alert","rootReducer","combineReducers","action","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2939a1ad.chunk.js","sourcesContent":["export const SHOW_LOADER = \"APP/SHOW_LOADER\";\r\nexport const HIDE_LOADER = \"APP/HIDE_LOADER\";\r\nexport const SHOW_ALERT = \"APP/SHOW_ALERT\";\r\nexport const HIDE_ALERT = \"APP/HIDE_ALERT\";\r\n\r\nexport const FETCH_DICTIONARY = \"DICTIONARY/FETCH\";\r\nexport const SET_QUERY = \"DICTIONARY/SET_QUERY\";\r\n","import {\r\n  HIDE_ALERT,\r\n  HIDE_LOADER,\r\n  SHOW_ALERT,\r\n  SHOW_LOADER,\r\n  FETCH_DICTIONARY,\r\n  SET_QUERY,\r\n} from \"./types\";\r\n\r\nexport function showLoader() {\r\n  return {\r\n    type: SHOW_LOADER,\r\n  };\r\n}\r\n\r\nexport function hideLoader() {\r\n  return {\r\n    type: HIDE_LOADER,\r\n  };\r\n}\r\n\r\nexport function showAlert(text) {\r\n  return {\r\n    type: SHOW_ALERT,\r\n    payload: text,\r\n  };\r\n}\r\n\r\nexport function hideAlert() {\r\n  return {\r\n    type: HIDE_ALERT,\r\n  };\r\n}\r\n\r\nexport function fetchDictionary(query) {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(showLoader());\r\n      const response = await fetch(\r\n        `https://api.dictionaryapi.dev/api/v2/entries/en/${query}`\r\n      );\r\n      const json = await response.json();\r\n      dispatch({ type: FETCH_DICTIONARY, payload: json });\r\n      dispatch(hideLoader());\r\n    } catch (e) {\r\n      console.error(e);\r\n      dispatch(showAlert(\"Something went wrong\"));\r\n      dispatch(hideLoader());\r\n    }\r\n  };\r\n}\r\n\r\nexport function setQuery(query) {\r\n  return (dispatch) => {\r\n    dispatch({ type: SET_QUERY, payload: query });\r\n  };\r\n}\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { fetchDictionary, setQuery } from \"../redux/actions\";\r\n\r\nexport default () => {\r\n  const input = useRef(null);\r\n  let history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    input.current.focus();\r\n  });\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    let query = input.current.value.trim();\r\n    dispatch(fetchDictionary(query));\r\n    dispatch(setQuery(query));\r\n    history.push(`/dictionary/${query}`);\r\n    input.current.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"form-search\" onSubmit={onSubmit}>\r\n        <div className=\"input-group mb-3\">\r\n          <input\r\n            className=\"form-control form-control-lg\"\r\n            type=\"text\"\r\n            ref={input}\r\n            placeholder=\"Search English Dictionary\"\r\n            aria-label=\"English Dictionary\"\r\n            aria-describedby=\"button-search\"\r\n            required\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-lg btn-secondary\"\r\n            id=\"button-search\"\r\n          >\r\n            <i className=\"bi bi-search\"></i>\r\n          </button>\r\n          {/* <button type=\"reset\" onClick={onReset} ref={reset}>\r\n            <i class=\"bi bi-x\"></i>\r\n          </button> */}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <p className=\"text-center text-secondary fst-italic\">\r\n        <a\r\n          className=\"text-secondary text-decoration-none\"\r\n          href=\"https://github.com/meetDeveloper\"\r\n        >\r\n          <i className=\"bi bi-github\"></i> meetDeveloper,\r\n        </a>{\" \"}\r\n        thank you for providing{\" \"}\r\n        <a\r\n          className=\"text-secondary\"\r\n          href=\"https://github.com/meetDeveloper/freeDictionaryAPI\"\r\n        >\r\n          free dictionary API\r\n        </a>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const DictionaryItem = ({ dictionary }) => {\r\n  const { meanings, word, phonetics } = dictionary;\r\n\r\n  const meaningsList =\r\n    meanings.length &&\r\n    meanings.map((meaning, i) => {\r\n      return (\r\n        <div className=\"meanings mb-3\" key={i}>\r\n          <span className=\"badge bg-secondary mb-3\">\r\n            {meaning.partOfSpeech}\r\n          </span>{\" \"}\r\n          <br />\r\n          {meaning.definitions.map((definition, i) => {\r\n            return (\r\n              <p key={i}>\r\n                <strong>{definition.definition}</strong>:{\" \"}\r\n                <i>{definition.example}</i>\r\n              </p>\r\n            );\r\n          })}\r\n        </div>\r\n      );\r\n    });\r\n\r\n  const phoneticsList =\r\n    phonetics.length &&\r\n    phonetics.map((phonetic, i) => {\r\n      const audioURL = phonetic.audio;\r\n      const audio = new Audio(audioURL);\r\n\r\n      return (\r\n        <div className=\"phonetics\" key={i}>\r\n          {audioURL && (\r\n            <button onClick={() => audio.play()} className=\"btn btn-outline\">\r\n              <i className=\"bi bi-volume-up-fill\"></i>\r\n            </button>\r\n          )}\r\n          {phonetic.text && `/${phonetic.text}/`}\r\n        </div>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-body\">\r\n        <h2 className=\"card-title\">{word}</h2>\r\n        {phoneticsList}\r\n        {meaningsList}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Loader = () => (\r\n  <div className=\"text-center\">\r\n    <div className=\"spinner-border\" role=\"status\">\r\n      <span className=\"visually-hidden\">Loading...</span>\r\n    </div>\r\n  </div>\r\n);\r\n","import React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchDictionary } from \"../redux/actions\";\r\nimport { DictionaryItem } from \"./DictionaryItem\";\r\nimport { Loader } from \"./Loader\";\r\n\r\nexport default () => {\r\n  let { slug } = useParams();\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector((state) => state.app.loading);\r\n  const dictionary = useSelector((state) => state.dictionary.fetchedDictionary);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchDictionary(slug));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          {loading && <Loader />}\r\n\r\n          {dictionary && dictionary.message}\r\n\r\n          {dictionary &&\r\n            Array.isArray(dictionary) &&\r\n            dictionary.map((res, i) => {\r\n              return <DictionaryItem dictionary={res} key={i} />;\r\n            })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport FormSearch from \"./components/FormSearch\";\r\nimport Home from \"./components/Home\";\r\nimport Dictionary from \"./components/Dictionary\";\r\n\r\nimport \"./App.css\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col mb-4\">\r\n            <h1 className=\"text-center color-secondary mt-3 mb-4\">\r\n              <Link\r\n                to=\"/dictionary/\"\r\n                className=\"page-title text-decoration-none text-secondary\"\r\n              >\r\n                English Dictionary\r\n              </Link>\r\n            </h1>\r\n            <FormSearch />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Switch>\r\n        <Route exact path=\"/dictionary/\">\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/dictionary/:slug\">\r\n          <Dictionary />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { HIDE_ALERT, HIDE_LOADER, SHOW_ALERT, SHOW_LOADER } from \"./types\"\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    alert: null\r\n}\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SHOW_LOADER:\r\n            return {...state, loading: true }\r\n        case HIDE_LOADER:\r\n            return {...state, loading: false }\r\n        case SHOW_ALERT:\r\n            return {...state, alert: action.payload }\r\n        case HIDE_ALERT:\r\n            return {...state, alert: null }\r\n        default:\r\n            return state\r\n    }\r\n}","import { FETCH_DICTIONARY, SET_QUERY } from \"./types\";\r\n\r\nconst initialState = {\r\n  fetchedDictionary: [],\r\n  query: \"\",\r\n};\r\n\r\nexport const dictionaryReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_DICTIONARY:\r\n      return { ...state, fetchedDictionary: action.payload };\r\n    case SET_QUERY: {\r\n      return { ...state, query: action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { appReducer } from \"./appReducer\";\r\nimport { dictionaryReducer } from \"./dictionaryReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  app: appReducer,\r\n  dictionary: dictionaryReducer,\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\n// Redux\r\nimport { rootReducer } from \"./redux/rootReducer\";\r\nimport { compose, createStore, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__\r\n      ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n      : (f) => f\r\n  )\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}